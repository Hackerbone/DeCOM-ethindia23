// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class VendorCreated extends ethereum.Event {
  get params(): VendorCreated__Params {
    return new VendorCreated__Params(this);
  }
}

export class VendorCreated__Params {
  _event: VendorCreated;

  constructor(event: VendorCreated) {
    this._event = event;
  }

  get vendorAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get vendorWalletAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }

  get logo(): string {
    return this._event.parameters[3].value.toString();
  }

  get wantsKYC(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }
}

export class VendorFactory__vendorsResult {
  value0: Address;
  value1: Address;
  value2: string;
  value3: string;
  value4: boolean;

  constructor(
    value0: Address,
    value1: Address,
    value2: string,
    value3: string,
    value4: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    return map;
  }

  getVendorAddress(): Address {
    return this.value0;
  }

  getVendorWalletAddress(): Address {
    return this.value1;
  }

  getName(): string {
    return this.value2;
  }

  getLogo(): string {
    return this.value3;
  }

  getWantsKYC(): boolean {
    return this.value4;
  }
}

export class VendorFactory__listVendorsResultValue0Struct extends ethereum.Tuple {
  get vendorAddress(): Address {
    return this[0].toAddress();
  }

  get vendorWalletAddress(): Address {
    return this[1].toAddress();
  }

  get name(): string {
    return this[2].toString();
  }

  get logo(): string {
    return this[3].toString();
  }

  get wantsKYC(): boolean {
    return this[4].toBoolean();
  }
}

export class VendorFactory__getVendorByWalletAddressResultValue0Struct extends ethereum.Tuple {
  get vendorAddress(): Address {
    return this[0].toAddress();
  }

  get vendorWalletAddress(): Address {
    return this[1].toAddress();
  }

  get name(): string {
    return this[2].toString();
  }

  get logo(): string {
    return this[3].toString();
  }

  get wantsKYC(): boolean {
    return this[4].toBoolean();
  }
}

export class VendorFactory extends ethereum.SmartContract {
  static bind(address: Address): VendorFactory {
    return new VendorFactory("VendorFactory", address);
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  vendors(param0: BigInt): VendorFactory__vendorsResult {
    let result = super.call(
      "vendors",
      "vendors(uint256):(address,address,string,string,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new VendorFactory__vendorsResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toString(),
      result[3].toString(),
      result[4].toBoolean()
    );
  }

  try_vendors(
    param0: BigInt
  ): ethereum.CallResult<VendorFactory__vendorsResult> {
    let result = super.tryCall(
      "vendors",
      "vendors(uint256):(address,address,string,string,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new VendorFactory__vendorsResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toString(),
        value[3].toString(),
        value[4].toBoolean()
      )
    );
  }

  listVendors(): Array<VendorFactory__listVendorsResultValue0Struct> {
    let result = super.call(
      "listVendors",
      "listVendors():((address,address,string,string,bool)[])",
      []
    );

    return result[0].toTupleArray<
      VendorFactory__listVendorsResultValue0Struct
    >();
  }

  try_listVendors(): ethereum.CallResult<
    Array<VendorFactory__listVendorsResultValue0Struct>
  > {
    let result = super.tryCall(
      "listVendors",
      "listVendors():((address,address,string,string,bool)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<VendorFactory__listVendorsResultValue0Struct>()
    );
  }

  getVendorByWalletAddress(
    _vendorWalletAddress: Address
  ): VendorFactory__getVendorByWalletAddressResultValue0Struct {
    let result = super.call(
      "getVendorByWalletAddress",
      "getVendorByWalletAddress(address):((address,address,string,string,bool))",
      [ethereum.Value.fromAddress(_vendorWalletAddress)]
    );

    return changetype<
      VendorFactory__getVendorByWalletAddressResultValue0Struct
    >(result[0].toTuple());
  }

  try_getVendorByWalletAddress(
    _vendorWalletAddress: Address
  ): ethereum.CallResult<
    VendorFactory__getVendorByWalletAddressResultValue0Struct
  > {
    let result = super.tryCall(
      "getVendorByWalletAddress",
      "getVendorByWalletAddress(address):((address,address,string,string,bool))",
      [ethereum.Value.fromAddress(_vendorWalletAddress)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<VendorFactory__getVendorByWalletAddressResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateVendorContractCall extends ethereum.Call {
  get inputs(): CreateVendorContractCall__Inputs {
    return new CreateVendorContractCall__Inputs(this);
  }

  get outputs(): CreateVendorContractCall__Outputs {
    return new CreateVendorContractCall__Outputs(this);
  }
}

export class CreateVendorContractCall__Inputs {
  _call: CreateVendorContractCall;

  constructor(call: CreateVendorContractCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _logo(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _wantsKYC(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class CreateVendorContractCall__Outputs {
  _call: CreateVendorContractCall;

  constructor(call: CreateVendorContractCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
